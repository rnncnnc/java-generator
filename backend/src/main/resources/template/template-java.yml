# 如果觉得好用，请收藏或则分享本站
fileType: controller
classObj:
  parents:
    - name: extend
      type:
        className: BaseController
        packageName: controller
      generics:
        - className: FictionPojo
          packageName: entity.pojo
    - name: implements
      type:
        className: BaseMapper
        packageName: mapper
      generics:
        - className: FictionPojo
          packageName: entity.pojo
  name: class
  type: FictionController
  packageName: controller
  permission: public
  generics:
    - name: T
      type: FictionPojo
      packageName: entity.pojo
    - name: E
  comment:
    - '/**'
    - '* @Data: 2025/5/26 22:38'
    - ' * @Author: Lc'
    - ' * @Description:'
    - ' */'
  annotations:
    - name: Entity
      params:
        - key: name
          value: Fiction
    - name: Table
      params:
        - key: name
          value: Fiction
    - name: Schema
      params:
        - key: name
          value: Fiction
        - key: description
          value: 小说
  variables:
    - name: id
      type:
        className: Integer
        isGeneric: false
      permission: private
      comment:
        - '/**'
        - ' * 会话id'
        - ' */'
      annotations:
        - name: Column
          params:
            - key: name
              value: id
        - name: Schema
          params:
            - key: description
              value: 小说id
    - name: novel
      type:
        className: String
        isGeneric: false
      permission: private
      comment:
        - '/**'
        - ' * 小说名称'
        - ' */'
      annotations:
        - name: Column
          params:
            - key: name
              value: novel
        - name: Schema
          params:
            - key: description
              value: 小说名称
  methods:
    - name: delete
      returnType:
        className: Result
        packageName: entity.vo
        isGeneric: false
      permission: public
      comment:
        - '/**'
        - ' * 查找符合类型的所有数据'
        - ' * @param query'
        - ' * @return'
        - '*/'
      generics:
        - name: T
          type: Pojo
          packageName: entity.pojo
        - name: E
          type: Entity
      annotations:
        - name: Operation
          params:
            - key: summary
              value: 删除数据
            - key: description
              value: 根据条件删除数据
        - name: DeleteMapping
          params:
            - key: value
              value: /delete
      parameters:
        - name: pojo
          type:
            className: FunctionPojo
            packageName: entity.pojo
            isGeneric: false
          annotations:
            - name: RequestBody
              params: []
            - name: RequestParam
              params:
                - key: name
                  value: pojo
                - key: required
                  value: "true"
      bodyInfo:
        require:
          - className: Query
            packageName: entity.query
            isGeneric: false
          - className: FictionPojo
            packageName: entity.pojo
            isGeneric: false
        body:
          - 'Query<FictionPojo> query = new Query<>();'
          - 'query.setPojo(pojo);'
          - 'testService.delete(query);'
          - ''
          - 'return Result.success();'
  getAndSet: true
  construct: true
